<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_close_edit_branch.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>